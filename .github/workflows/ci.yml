name: Java CI

on:
  push:
    branches: [ master, dev, msi-installer ]
  pull_request:
    branches: [ master, dev ]

jobs:
  build-msi:
    if: github.ref == 'refs/heads/msi-installer'
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build JAR with Maven
        run: mvn clean package -DskipTests

      - name: Build MSI Installer
        run: .\createMsi.bat
        shell: cmd

      - name: Upload MSI artifact
        uses: actions/upload-artifact@v4
        with:
          name: studienplaner-msi
          path: "*.msi"

  release-msi:
    needs: build-msi
    if: github.ref == 'refs/heads/msi-installer'
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download MSI artifact
        uses: actions/download-artifact@v4
        with:
          name: studienplaner-msi
          path: .

      - name: Get latest release from master
        id: get_latest_release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            if (releases.data.length === 0) {
              core.setFailed('No releases found in this repository.');
            } else {
              const latestTag = releases.data[0].tag_name;
              console.log("Latest release tag:", latestTag);
              core.setOutput('tag', latestTag);
            }
          result-encoding: string

      - name: Debug latest tag
        run:
          echo "Latest release tag: ${{ steps.get_latest_release.outputs.tag }}"

      - name: Update latest release with MSI artifact
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_latest_release.outputs.tag }}   # Проверьте, что здесь tag, а не result
          target_commitish: master   # Опционально, если релиз построен от master
          files: "*.msi"
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Update latest release with MSI artifact
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_latest_release.outputs.tag }}
          files: "*.msi"